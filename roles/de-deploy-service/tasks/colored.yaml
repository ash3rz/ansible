# Determines the current color (blue or green) of a service using consul, then delegates to swap-service.yaml to deploy based on this information.
---

- block:
  - when: available_services is not iterable
    name: verify available_services was provided to check-service
    fail: msg="An iterable available_services must be passed to check-service  .yaml"

  - when: check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "{{service_name}}_green"

  - when: check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "{{service_name}}_blue"

  - when: has_configs|default(true) and
          check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "config_{{service_name}}_green"

  - when: has_configs|default(true) and
          check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "config_{{service_name}}_blue"

  - when: has_iplant_data|default(false) and
          check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "iplant_data_{{service_name}}_green"

  - when: has_iplant_data|default(false) and
          check_service_name not in available_services
    name: verify that {{check_service_name}} exists in the docker-compose file
    fail: msg="{{check_service_name}} is not available on this host"
    vars:
      check_service_name: "iplant_data_{{service_name}}_blue"
  vars:
    available_services: "{{service_list.stdout_lines}}"
  tags:
    - verify


- name: Determine color of {{service_name_short}}
  shell: "curl -f http://localhost:{{consul_port}}/v1/kv/{{environment_name}}/{{service_name_short}}/color?raw || printf 'green'"
  args:
    warn: no
  register: service_color_check

- debug: msg="Color of {{service_name}} is {{service_color_check.stdout_lines[0]}}"

- include: swap-service.yaml
  vars:
      current_color: "green"
      other_color: "blue"
  when: service_color_check.stdout_lines[0] == 'green'

- include: swap-service.yaml
  vars:
      current_color: "blue"
      other_color: "green"
  when: service_color_check.stdout_lines[0] == 'blue'
